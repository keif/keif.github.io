{"version":3,"sources":["webpack:///./src/blocks/Post/Info.js","webpack:///./src/blocks/Post/Date.js","webpack:///./src/blocks/Post/Data.js","webpack:///./src/blocks/Post/Text.js","webpack:///./src/blocks/Post/index.js","webpack:///./src/templates/post.js"],"names":["BlogInfo","styled","div","BlogDate","span","BlogData","BlogText","BlogPage","Info","Date","Data","Text","Template","post","data","markdownRemark","frontmatter","date","timeToRead","category","title","dangerouslySetInnerHTML","__html","html","defaultProps","postQuery"],"mappings":"uOAWeA,EATEC,IAAOC,IAAV,iEAAGD,CAAH,oHCMCE,EANEF,IAAOG,KAAV,iEAAGH,CAAH,qDCMCI,EANEJ,IAAOG,KAAV,iEAAGH,CAAH,0BCkBCK,EAlBEL,IAAOC,IAAV,iEAAGD,CAAH,iJCKRM,EAAWN,IAAOC,IAAV,qEAAGD,CAAH,wQA6BdM,EAASC,KAAOR,EAChBO,EAASE,KAAON,EAChBI,EAASG,KAAOL,EAChBE,EAASI,KAAOL,EAEDC,QCjCA,SAASK,EAAT,GAA6B,IAChBC,EADe,EAARC,KACvBC,eAER,OACI,kBAAC,IAAD,KACI,kBAAC,EAAD,KACI,kBAAC,EAASP,KAAV,KACI,kBAAC,EAASC,KAAV,KAAgBI,EAAKG,YAAYC,MACjC,kBAAC,EAASP,KAAV,KACKG,EAAKK,WADV,IACuBL,EAAKK,WAAa,EAAI,UAAY,SADzD,aAEI,mCACCL,EAAKG,YAAYG,WAG1B,kBAAC,EAASR,KAAV,KACI,4BAAKE,EAAKG,YAAYI,OACtB,yBAAKC,wBAAyB,CAAEC,OAAQT,EAAKU,WAUjEX,EAASY,aAAe,CACpBV,KAAM,MAGH,IAAMW,EAAS","file":"component---src-templates-post-js-a5812b7dfc8dacea4e95.js","sourcesContent":["import styled from \"styled-components\";\n\nconst BlogInfo = styled.div`\n  color: #cfcfcf;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nexport default BlogInfo;\n","import styled from \"styled-components\";\n\nconst BlogDate = styled.span`\n  color: #dd390f;\n  font-size: 24px;\n  margin-bottom: 0px;\n`;\n\nexport default BlogDate;\n","import styled from \"styled-components\";\n\nconst BlogData = styled.span`\n  span {\n    margin: 0 10px;\n  }\n`;\n\nexport default BlogData;\n","import styled from \"styled-components\";\n\nconst BlogText = styled.div`\n  h1 {\n    text-align: center;\n    margin: 50px 0;\n  }\n  p,\n  pre,\n  code {\n    max-width: 960px;\n    margin: 20px auto !important;\n    color: #696969;\n  }\n  img {\n    width: 100%;\n    margin: 20px auto;\n  }\n`;\n\nexport default BlogText;\n","import styled from \"styled-components\";\n\nimport BlogInfo from \"./Info\";\nimport BlogDate from \"./Date\";\nimport BlogData from \"./Data\";\nimport BlogText from \"./Text\";\n\nconst BlogPage = styled.div`\n  margin: 60px auto;\n  max-width: 1200px;\n  @media (max-width: 1200px) {\n    padding: 0 15px;\n  }\n  h1,\n  h2,\n  h3 {\n    color: #696969;\n  }\n  h1 {\n    &:after {\n      content: \"\";\n      display: block;\n      width: 100%;\n      height: 3px;\n      max-width: 120px;\n      background-color: #dd390f;\n      margin: 20px auto;\n    }\n  }\n  h2,\n  h3 {\n    max-width: 960px;\n    margin: 40px auto;\n  }\n`;\n\nBlogPage.Info = BlogInfo;\nBlogPage.Date = BlogDate;\nBlogPage.Data = BlogData;\nBlogPage.Text = BlogText;\n\nexport default BlogPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Layout from \"../components/layout\";\nimport BlogPage from \"../blocks/Post\";\n\nimport { graphql } from \"gatsby\";\n\nexport default function Template({ data }) {\n    const { markdownRemark: post } = data;\n\n    return (\n        <Layout>\n            <BlogPage>\n                <BlogPage.Info>\n                    <BlogPage.Date>{post.frontmatter.date}</BlogPage.Date>\n                    <BlogPage.Data>\n                        {post.timeToRead} {post.timeToRead > 1 ? \"minutes\" : \"minute\"} read time\n                        <span>-</span>\n                        {post.frontmatter.category}\n                    </BlogPage.Data>\n                </BlogPage.Info>\n                <BlogPage.Text>\n                    <h1>{post.frontmatter.title}</h1>\n                    <div dangerouslySetInnerHTML={{ __html: post.html }} />\n                </BlogPage.Text>\n            </BlogPage>\n        </Layout>\n    );\n}\n\nTemplate.propTypes = {\n    data: PropTypes.object,\n};\nTemplate.defaultProps = {\n    data: null,\n};\n\nexport const postQuery = graphql`\n    query BlogPostByPath($path: String!) {\n        markdownRemark(frontmatter: { path: { eq: $path } }) {\n            html\n            timeToRead\n            frontmatter {\n                path\n                title\n                date\n                category\n            }\n        }\n    }\n`;\n"],"sourceRoot":""}