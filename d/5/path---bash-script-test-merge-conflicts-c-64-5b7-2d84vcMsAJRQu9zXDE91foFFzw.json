{"data":{"markdownRemark":{"html":"<p>A reoccuring problem I run into at work is handling multiple branches on a dev environment comprised of Java, JavaScript, SQL, and SCSS files.</p>\n<p>It's not an ideal scenario, but utilizing Jenkins, the task is fairly easy in the pipeline - you list the branches you want built, you tell it to deploy (or on a schedule) and it runs through and confirms there is no merge conflicts, before continuing on the pipeline to run the jasmine tests to verify everything is up to snuff on the front-end. Of course, since it's Jenkins, I can kick off the build, then head to the console output and watch for an error, or wait for it to fail.</p>\n<p>But who has time for that? In that time, three new JavaScript frameworks were released, and one failed, and the other already replaced Angular!</p>\n<p><img src=\"./sweet-brown.jpeg\" alt=\"Working\">\n<img src=\"&#x27;./sweet-brown.jpeg&#x27;\" alt=\"Working\"></p>","timeToRead":1,"frontmatter":{"path":"/bash-script-test-merge-conflicts","title":"Bash Script - test merge conflicts","date":"13th January, 2019.","category":"Code"}}},"pageContext":{}}